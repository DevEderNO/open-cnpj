// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.DCnae", b =>
                {
                    b.Property<string>("Cnae")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Cnae");

                    b.ToTable("Cnaes");
                });

            modelBuilder.Entity("Domain.Models.Empresa", b =>
                {
                    b.Property<string>("CnpjBasico")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<decimal>("CapitalSocial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EnteFederativoResponsavel")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NaturezaJuridica")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("PorteEmpresa")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("QualificacaoResponsavel")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CnpjBasico");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Domain.Models.Estabelecimento", b =>
                {
                    b.Property<string>("Cnpj")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Bairro")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Cep")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("CnaeFiscalPrincipalId")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("CnpjBasico")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("CnpjDv")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("CnpjOrdem")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DCnaeCnae")
                        .HasColumnType("nvarchar(7)");

                    b.Property<DateTime>("DataInicioAtividade")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataSituacaoCadastral")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataSituacaoEspecial")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ddd1")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Ddd2")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("DddFax")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("IdentificadorMatrizFilial")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotivoSituacaoCadastral")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Municipio")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("NomeCidadeNoExterior")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NomeFantasia")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Pais")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("SituacaoCadastral")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("SituacaoEspecial")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Telefone1")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("TipoLogradouro")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Uf")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Cnpj");

                    b.HasIndex("DCnaeCnae");

                    b.ToTable("Estabelecimentos");
                });

            modelBuilder.Entity("Domain.Models.EstabelecimentoCnaeSecundario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CnaeSecundarioId")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("EstabelecimentoId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.HasKey("Id");

                    b.HasIndex("CnaeSecundarioId");

                    b.HasIndex("EstabelecimentoId");

                    b.ToTable("EstabelecimentoCnaesSecundarios");
                });

            modelBuilder.Entity("Domain.Models.File", b =>
                {
                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("LineNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Progress")
                        .HasColumnType("real");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Url");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Domain.Models.Folder", b =>
                {
                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Url");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("Domain.Models.Estabelecimento", b =>
                {
                    b.HasOne("Domain.Models.DCnae", null)
                        .WithMany("Estabelecimentos")
                        .HasForeignKey("DCnaeCnae");
                });

            modelBuilder.Entity("Domain.Models.EstabelecimentoCnaeSecundario", b =>
                {
                    b.HasOne("Domain.Models.DCnae", "CnaeSecundario")
                        .WithMany("EstabelecimentoCnaesSecundarios")
                        .HasForeignKey("CnaeSecundarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Estabelecimento", "Estabelecimento")
                        .WithMany("EstabelecimentoCnaesSecundarios")
                        .HasForeignKey("EstabelecimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CnaeSecundario");

                    b.Navigation("Estabelecimento");
                });

            modelBuilder.Entity("Domain.Models.DCnae", b =>
                {
                    b.Navigation("EstabelecimentoCnaesSecundarios");

                    b.Navigation("Estabelecimentos");
                });

            modelBuilder.Entity("Domain.Models.Estabelecimento", b =>
                {
                    b.Navigation("EstabelecimentoCnaesSecundarios");
                });
#pragma warning restore 612, 618
        }
    }
}
